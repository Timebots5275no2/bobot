//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input System/Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Input : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Input()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input"",
    ""maps"": [
        {
            ""name"": ""Your mother"",
            ""id"": ""2db10d84-5395-473c-baf3-9423001dec42"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a0d4743f-6f1b-48a7-ab6b-33cb91b0bfd8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""20d673a9-db75-4609-a61e-84672e343903"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch Camera Mode"",
                    ""type"": ""Button"",
                    ""id"": ""080234f4-c914-4df3-a356-4ff72bddb011"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetZero"",
                    ""type"": ""Button"",
                    ""id"": ""5dfa14a6-9819-497c-a789-792e36cb5a36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""06fd7ae2-415e-4257-ab81-eaa1066d8001"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d679cc69-a330-45a8-8947-f3f7adb59605"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""932a20fb-4cfb-42bf-be41-04839a6cc52b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fafb99ff-0c8f-4cee-9862-0887fe626eb6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e22d7f9a-4ab2-409d-aa2d-de50808dabb9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""a59808c7-e812-451a-a011-433e8fb18c8c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""090369b3-1a8a-4728-af08-d3a841d2c883"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""92ebd4e4-2a0a-4d4f-8606-fe775c5e4aa2"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0c5a1df9-d9eb-4187-8372-ffc939963b24"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Camera Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2493ca03-2b53-47cd-a1be-8684ef315ea2"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetZero"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Your mother
        m_Yourmother = asset.FindActionMap("Your mother", throwIfNotFound: true);
        m_Yourmother_Movement = m_Yourmother.FindAction("Movement", throwIfNotFound: true);
        m_Yourmother_Rotation = m_Yourmother.FindAction("Rotation", throwIfNotFound: true);
        m_Yourmother_SwitchCameraMode = m_Yourmother.FindAction("Switch Camera Mode", throwIfNotFound: true);
        m_Yourmother_ResetZero = m_Yourmother.FindAction("ResetZero", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Your mother
    private readonly InputActionMap m_Yourmother;
    private IYourmotherActions m_YourmotherActionsCallbackInterface;
    private readonly InputAction m_Yourmother_Movement;
    private readonly InputAction m_Yourmother_Rotation;
    private readonly InputAction m_Yourmother_SwitchCameraMode;
    private readonly InputAction m_Yourmother_ResetZero;
    public struct YourmotherActions
    {
        private @Input m_Wrapper;
        public YourmotherActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Yourmother_Movement;
        public InputAction @Rotation => m_Wrapper.m_Yourmother_Rotation;
        public InputAction @SwitchCameraMode => m_Wrapper.m_Yourmother_SwitchCameraMode;
        public InputAction @ResetZero => m_Wrapper.m_Yourmother_ResetZero;
        public InputActionMap Get() { return m_Wrapper.m_Yourmother; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(YourmotherActions set) { return set.Get(); }
        public void SetCallbacks(IYourmotherActions instance)
        {
            if (m_Wrapper.m_YourmotherActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnMovement;
                @Rotation.started -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnRotation;
                @SwitchCameraMode.started -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnSwitchCameraMode;
                @SwitchCameraMode.performed -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnSwitchCameraMode;
                @SwitchCameraMode.canceled -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnSwitchCameraMode;
                @ResetZero.started -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnResetZero;
                @ResetZero.performed -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnResetZero;
                @ResetZero.canceled -= m_Wrapper.m_YourmotherActionsCallbackInterface.OnResetZero;
            }
            m_Wrapper.m_YourmotherActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @SwitchCameraMode.started += instance.OnSwitchCameraMode;
                @SwitchCameraMode.performed += instance.OnSwitchCameraMode;
                @SwitchCameraMode.canceled += instance.OnSwitchCameraMode;
                @ResetZero.started += instance.OnResetZero;
                @ResetZero.performed += instance.OnResetZero;
                @ResetZero.canceled += instance.OnResetZero;
            }
        }
    }
    public YourmotherActions @Yourmother => new YourmotherActions(this);
    public interface IYourmotherActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnSwitchCameraMode(InputAction.CallbackContext context);
        void OnResetZero(InputAction.CallbackContext context);
    }
}
